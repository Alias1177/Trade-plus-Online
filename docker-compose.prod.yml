version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: traderplus_db
      POSTGRES_USER: traderplus_user
      POSTGRES_PASSWORD: SimplePassword123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U traderplus_user"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Go Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - prod.env
    # All environment variables are loaded from prod.env file
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Frontend with SSL
  frontend:
    build:
      context: ./TradePlusOnline
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/conf:/etc/nginx/ssl:ro
      - ./certbot/www:/var/www/certbot
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  backend-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local 